From 8e4f8a46b17f109ddbe81a179768463b8dc73348 Mon Sep 17 00:00:00 2001
From: mzz2017 <mzz@tuta.io>
Date: Sat, 7 Aug 2021 14:19:15 +0800
Subject: [PATCH] feat: use gzip to compress web files

---
 service/go.mod                 |  1 +
 service/go.sum                 |  4 ++++
 service/server/router/index.go | 20 ++++++++------------
 3 files changed, 13 insertions(+), 12 deletions(-)

--- a/go.mod
+++ b/go.mod
@@ -6,6 +6,7 @@ require (
 	github.com/beevik/ntp v0.3.0
 	github.com/dgrijalva/jwt-go v3.2.0+incompatible
 	github.com/gin-contrib/cors v1.3.1
+	github.com/gin-contrib/gzip v0.0.3
 	github.com/gin-gonic/gin v1.7.1
 	github.com/go-playground/validator/v10 v10.5.0 // indirect
 	github.com/gocarina/gocsv v0.0.0-20210408192840-02d7211d929d // indirect
--- a/go.sum
+++ b/go.sum
@@ -91,9 +91,12 @@ github.com/fsnotify/fsnotify v1.4.9/go.m
 github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=
 github.com/gin-contrib/cors v1.3.1 h1:doAsuITavI4IOcd0Y19U4B+O0dNWihRyX//nn4sEmgA=
 github.com/gin-contrib/cors v1.3.1/go.mod h1:jjEJ4268OPZUcU7k9Pm653S7lXUGcqMADzFA61xsmDk=
+github.com/gin-contrib/gzip v0.0.3 h1:etUaeesHhEORpZMp18zoOhepboiWnFtXrBZxszWUn4k=
+github.com/gin-contrib/gzip v0.0.3/go.mod h1:YxxswVZIqOvcHEQpsSn+QF5guQtO1dCfy0shBPy4jFc=
 github.com/gin-contrib/sse v0.1.0 h1:Y/yl/+YNO8GZSjAhjMsSuLt29uWRFHdHYUb5lYOV9qE=
 github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=
 github.com/gin-gonic/gin v1.5.0/go.mod h1:Nd6IXA8m5kNZdNEHMBd93KT+mdY3+bewLgRvmCsR2Do=
+github.com/gin-gonic/gin v1.6.3/go.mod h1:75u5sXoLsGZoRN5Sgbi1eraJ4GU3++wFwWzhwvtwp4M=
 github.com/gin-gonic/gin v1.7.1 h1:qC89GU3p8TvKWMAVhEpmpB2CIb1hnqt2UdKZaP93mS8=
 github.com/gin-gonic/gin v1.7.1/go.mod h1:jD2toBW3GZUr5UMcdrwQA10I7RuaFOl/SGeDjXkfUtY=
 github.com/gliderlabs/ssh v0.1.1/go.mod h1:U7qILu1NlMHj9FlMhZLlkCdDnU1DBEAqr0aevW3Awn0=
@@ -110,6 +113,7 @@ github.com/go-playground/locales v0.13.0
 github.com/go-playground/universal-translator v0.16.0/go.mod h1:1AnU7NaIRDWWzGEKwgtJRd2xk99HeFyHw3yid4rvQIY=
 github.com/go-playground/universal-translator v0.17.0 h1:icxd5fm+REJzpZx7ZfpaD876Lmtgy7VtROAbHHXk8no=
 github.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=
+github.com/go-playground/validator/v10 v10.2.0/go.mod h1:uOYAAleCW8F/7oMFd6aG0GOhaH6EGOAJShg8Id5JGkI=
 github.com/go-playground/validator/v10 v10.4.1/go.mod h1:nlOn6nFhuKACm19sB/8EGNn9GlaMV7XkbRSipzJ0Ii4=
 github.com/go-playground/validator/v10 v10.5.0 h1:X9rflw/KmpACwT8zdrm1upefpvdy6ur8d1kWyq6sg3E=
 github.com/go-playground/validator/v10 v10.5.0/go.mod h1:xm76BBt941f7yWdGnI2DVPFFg1UK3YY04qifoXU3lOk=
--- a/server/router/index.go
+++ b/server/router/index.go
@@ -3,6 +3,7 @@ package router
 import (
 	"embed"
 	"github.com/gin-contrib/cors"
+	"github.com/gin-contrib/gzip"
 	"github.com/gin-gonic/gin"
 	"github.com/gookit/color"
 	"github.com/v2rayA/v2rayA/common"
@@ -34,11 +35,7 @@ func (c relativeFS) Open(name string) (f
 }
 
 func ServeGUI(engine *gin.Engine) {
-	//defer func() {
-	//	if msg := recover(); msg != nil {
-	//		log.Println("[ERROR]", msg)
-	//	}
-	//}()
+	r := engine.Use(gzip.Gzip(gzip.DefaultCompression))
 	webDir := global.GetEnvironmentConfig().WebDir
 	if webDir == "" {
 		webFS := relativeFS{
@@ -50,19 +47,18 @@ func ServeGUI(engine *gin.Engine) {
 				return nil
 			}
 			if info.IsDir() {
-				engine.StaticFS("/"+info.Name(), http.FS(relativeFS{
+				r.StaticFS("/"+info.Name(), http.FS(relativeFS{
 					root:        webFS,
 					relativeDir: path,
 				}))
 				return filepath.SkipDir
 			}
-			engine.GET("/"+info.Name(), func(ctx *gin.Context) {
+			r.GET("/"+info.Name(), func(ctx *gin.Context) {
 				ctx.FileFromFS(path, http.FS(webFS))
 			})
 			return nil
 		})
-		//engine.LoadHTMLFiles(path.Join(webDir, "index.html"))
-		engine.GET("/", func(ctx *gin.Context) {
+		r.GET("/", func(ctx *gin.Context) {
 			f, err := webFS.Open("index.html")
 			if err != nil {
 				ctx.Status(400)
@@ -87,14 +83,14 @@ func ServeGUI(engine *gin.Engine) {
 					return nil
 				}
 				if info.IsDir() {
-					engine.Static("/"+info.Name(), path)
+					r.Static("/"+info.Name(), path)
 					return filepath.SkipDir
 				}
-				engine.StaticFile("/"+info.Name(), path)
+				r.StaticFile("/"+info.Name(), path)
 				return nil
 			})
 			engine.LoadHTMLFiles(path.Join(webDir, "index.html"))
-			engine.GET("/", func(context *gin.Context) {
+			r.GET("/", func(context *gin.Context) {
 				context.HTML(http.StatusOK, "index.html", nil)
 			})
 		}
